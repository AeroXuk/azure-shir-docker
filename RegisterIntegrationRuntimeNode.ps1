## PS > .\RegisterIntegrationRuntime.ps1  gatewayKey
param
(
    $gatewayKey = $(throw "Please input the Integration Runtime key to register.")
)

$newRegistryPath = "Software\Microsoft\DataTransfer\DataManagementGateway\ConfigurationManager"
$oldRegistryPath = "Software\Microsoft\DataTransfer\DataManagementGateway\HostService\Hdis"
$DiacmdPath = "DiacmdPath"
$ServiceDLLPath = "ServiceDll"
$GatewayPluginAssemblyName = "Microsoft.Hdis.AgentPlugin.AgentManagement.dll"
$GatewayPluginTypeName = "Microsoft.Hdis.AgentPlugin.AgentManagement.AgentManagementObject"

function Get-InstalledFilePath {
    $value = $null
    $newRegistryKey = $null
    $oldRegistryKey = $null

    $osBit = (get-wmiobject win32_processor).AddressWidth
    if ($osBit -eq '64') {
        $baseKey = [Microsoft.Win32.RegistryKey]::OpenBaseKey([Microsoft.Win32.RegistryHive]::LocalMachine, [Microsoft.Win32.RegistryView]::Registry64)
        $newRegistryKey = $baseKey.OpenSubKey($newRegistryPath)
        $oldRegistryKey = $baseKey.OpenSubKey($oldRegistryPath)
    }
    else {
        $baseKey = [Microsoft.Win32.RegistryKey]::OpenBaseKey([Microsoft.Win32.RegistryHive]::LocalMachine, [Microsoft.Win32.RegistryView]::Registry32)
        $newRegistryKey = $baseKey.OpenSubKey($newRegistryPath)
        $oldRegistryKey = $baseKey.OpenSubKey($oldRegistryPath)
    }
   
    if ($newRegistryKey -ne $null) {
        $value = $newRegistryKey.GetValue($DiacmdPath)
    }
    if ($value -eq $null -and $oldRegistryKey -ne $null) {
        ## This part is just used to keep the backward compatible for the released gateway (version from 1.0 ~ 1.2). 
        $value = $oldRegistryKey.GetValue($ServiceDLLPath)
        $global:IsReleasedAgent = $true
    }
    return $value
}

function RegisterOneAgent() {
    $filePath = Get-InstalledFilePath
		
    if ($filePath -eq $null) {
        Write-host "Unable to find install path of binaries - has the Integration Runtime been installed? - exiting"
        exit 1
    }
		
    if ($global:IsReleasedAgent -eq $true) {
        $fileDirectoryName = [System.IO.Path]::GetDirectoryName($filePath)
        $gatewayPluginPath = [System.IO.Path]::Combine($fileDirectoryName, $GatewayPluginAssemblyName)
        $gatewayPluginAssembly = [Reflection.Assembly]::LoadFrom($gatewayPluginPath)
        $gatewayPlugin = $gatewayPluginAssembly.CreateInstance($GatewayPluginTypeName)
			
        try {
            $gatewayPlugin.RegisterAgent($gatewayKey) | Out-File temp.txt
        }
        catch {
            ## Try to get detailed info when register Integration Runtime failed
            if ($_.Exception.InnerException) {
                foreach ($except in $_.Exception.InnerException.InnerExceptions) {
                    $except.Message >> temp.txt
                }
            }
            else {
                Write-host $_.Exception.Message >> temp.txt
            }
        }
    }
    else {
        # THIS is where the magic happens
		Write-Host "Ignoring old legacy DLL code - registering with diacmd.exe -rn"
		Start-Process "$($filepath)" -Wait -ArgumentList "-rn","$($gatewayKey)" -RedirectStandardOutput "temp.out" -RedirectStandardError "temp.error"
	
		$stdOutResp = Get-Content "temp.out"
		$stdErrResp = Get-Content "temp.error"

		Write-Host "Registration output:"
		$stdOutResp | ForEach-Object {Write-Host $_}
		Write-Host "Registration errors:"
		$stdErrResp | ForEach-Object {Write-Host $_}
	}
}
$global:IsReleasedAgent = $false

RegisterOneAgent

# SIG # Begin signature block
# MIInTQYJKoZIhvcNAQcCoIInPjCCJzoCAQExDzANBglghkgBZQMEAgEFADB5Bgor
# BgEEAYI3AgEEoGswaTA0BgorBgEEAYI3AgEeMCYCAwEAAAQQH8w7YFlLCE63JNLG
# KX7zUQIBAAIBAAIBAAIBAAIBADAxMA0GCWCGSAFlAwQCAQUABCDuelCoFQxPM8uZ
# rJRPJ+8Ooh7UnmdQ+jlQp+JcqYYOpKCCEWkwggh7MIIHY6ADAgECAhM2AAAAg1p7
# oy8moLi9AAEAAACDMA0GCSqGSIb3DQEBCwUAMEExEzARBgoJkiaJk/IsZAEZFgNH
# QkwxEzARBgoJkiaJk/IsZAEZFgNBTUUxFTATBgNVBAMTDEFNRSBDUyBDQSAwMTAe
# Fw0xODA3MTAxMzAzMDFaFw0xOTA3MTAxMzAzMDFaMCQxIjAgBgNVBAMTGU1pY3Jv
# c29mdCBBenVyZSBDb2RlIFNpZ24wggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEK
# AoIBAQDAjvKh83YYViDMOcTrVvSc6d/q+YkXi8v0RLBtJAHmQgtITPdg70wzbrK9
# aJuGFcdPJ3jlCXeK9t3W+nn8RP75+wkkH3H+8C1y/qgp/9K31swdF55S2xIKKW+G
# tzjfUl8g66VOBhD4RjoXcWV2zwr+9WtV+uVMUukv4GXQ8oMpgMWDLs5D/23+9yjz
# co91vEWs1GjiXleLBI4Ll4ktYUGEY5tpfSYNIY7RKxWCN1lEG8Tx2KdDrzFl0cqW
# 0uP+JjNnImKu/XjWzERkyTATjnmqBOg1cL8oqiNGexyrCR0o0grhVgakywv7UUP/
# RamsxF2JrGjgpdpbe5gZu2khc3jDAgMBAAGjggWHMIIFgzApBgkrBgEEAYI3FQoE
# HDAaMAwGCisGAQQBgjdbAQEwCgYIKwYBBQUHAwMwPQYJKwYBBAGCNxUHBDAwLgYm
# KwYBBAGCNxUIhpDjDYTVtHiE8Ys+hZvdFs6dEoFgg93NZoaUjDICAWQCAQswggJ2
# BggrBgEFBQcBAQSCAmgwggJkMGIGCCsGAQUFBzAChlZodHRwOi8vY3JsLm1pY3Jv
# c29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQlkyUEtJQ1NDQTAxLkFNRS5HQkxfQU1F
# JTIwQ1MlMjBDQSUyMDAxKDEpLmNydDBSBggrBgEFBQcwAoZGaHR0cDovL2NybDEu
# YW1lLmdibC9haWEvQlkyUEtJQ1NDQTAxLkFNRS5HQkxfQU1FJTIwQ1MlMjBDQSUy
# MDAxKDEpLmNydDBSBggrBgEFBQcwAoZGaHR0cDovL2NybDIuYW1lLmdibC9haWEv
# QlkyUEtJQ1NDQTAxLkFNRS5HQkxfQU1FJTIwQ1MlMjBDQSUyMDAxKDEpLmNydDBS
# BggrBgEFBQcwAoZGaHR0cDovL2NybDMuYW1lLmdibC9haWEvQlkyUEtJQ1NDQTAx
# LkFNRS5HQkxfQU1FJTIwQ1MlMjBDQSUyMDAxKDEpLmNydDBSBggrBgEFBQcwAoZG
# aHR0cDovL2NybDQuYW1lLmdibC9haWEvQlkyUEtJQ1NDQTAxLkFNRS5HQkxfQU1F
# JTIwQ1MlMjBDQSUyMDAxKDEpLmNydDCBrQYIKwYBBQUHMAKGgaBsZGFwOi8vL0NO
# PUFNRSUyMENTJTIwQ0ElMjAwMSxDTj1BSUEsQ049UHVibGljJTIwS2V5JTIwU2Vy
# dmljZXMsQ049U2VydmljZXMsQ049Q29uZmlndXJhdGlvbixEQz1BTUUsREM9R0JM
# P2NBQ2VydGlmaWNhdGU/YmFzZT9vYmplY3RDbGFzcz1jZXJ0aWZpY2F0aW9uQXV0
# aG9yaXR5MB0GA1UdDgQWBBS4fxr46FvirXEiEDuaiZyK8qlBJzAOBgNVHQ8BAf8E
# BAMCB4AwVAYDVR0RBE0wS6RJMEcxLTArBgNVBAsTJE1pY3Jvc29mdCBJcmVsYW5k
# IE9wZXJhdGlvbnMgTGltaXRlZDEWMBQGA1UEBRMNMjM2MTY3KzQzODA0MzCCAdQG
# A1UdHwSCAcswggHHMIIBw6CCAb+gggG7hjxodHRwOi8vY3JsLm1pY3Jvc29mdC5j
# b20vcGtpaW5mcmEvQ1JML0FNRSUyMENTJTIwQ0ElMjAwMS5jcmyGLmh0dHA6Ly9j
# cmwxLmFtZS5nYmwvY3JsL0FNRSUyMENTJTIwQ0ElMjAwMS5jcmyGLmh0dHA6Ly9j
# cmwyLmFtZS5nYmwvY3JsL0FNRSUyMENTJTIwQ0ElMjAwMS5jcmyGLmh0dHA6Ly9j
# cmwzLmFtZS5nYmwvY3JsL0FNRSUyMENTJTIwQ0ElMjAwMS5jcmyGLmh0dHA6Ly9j
# cmw0LmFtZS5nYmwvY3JsL0FNRSUyMENTJTIwQ0ElMjAwMS5jcmyGgbpsZGFwOi8v
# L0NOPUFNRSUyMENTJTIwQ0ElMjAwMSxDTj1CWTJQS0lDU0NBMDEsQ049Q0RQLENO
# PVB1YmxpYyUyMEtleSUyMFNlcnZpY2VzLENOPVNlcnZpY2VzLENOPUNvbmZpZ3Vy
# YXRpb24sREM9QU1FLERDPUdCTD9jZXJ0aWZpY2F0ZVJldm9jYXRpb25MaXN0P2Jh
# c2U/b2JqZWN0Q2xhc3M9Y1JMRGlzdHJpYnV0aW9uUG9pbnQwHwYDVR0jBBgwFoAU
# G2aiGfyb66XahI8YmOkQpMN7kr0wHwYDVR0lBBgwFgYKKwYBBAGCN1sBAQYIKwYB
# BQUHAwMwDQYJKoZIhvcNAQELBQADggEBAC1kUqAze089rs1rJO6voZwu29oN3ccW
# 6ZpGMdXZLSolYqWM1ubJEy4VT9b5STxUlCVX3p7o9haCAC79d392AuvkxihctJ/n
# +YCETTi6lBGkpb2fgAtbHcaRpBqOqMGyiNVwIVSIZXf3TUIf7zvcOnWVjzALf+oe
# e86cZL01XeqiXCIqEZ2IL+tZ3I5KPLvyAU7jfQheUW7GHMkHC9jL3wq3i635/Exr
# jthoflaYbSssSaf1TcBBK31I3xAQiQnHzmE07rK9FrkNNjPRsnHWSRf1CCFeo2bH
# FFX/GRMRyJ75ExyM3T4tbXHSkzIHXSjBDHJuFFpRWYJDlPk7Uh9ZPnEwggjmMIIG
# zqADAgECAhMfAAAAFLTFH8bygL5xAAAAAAAUMA0GCSqGSIb3DQEBCwUAMDwxEzAR
# BgoJkiaJk/IsZAEZFgNHQkwxEzARBgoJkiaJk/IsZAEZFgNBTUUxEDAOBgNVBAMT
# B2FtZXJvb3QwHhcNMTYwOTE1MjEzMzAzWhcNMjEwOTE1MjE0MzAzWjBBMRMwEQYK
# CZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRUwEwYDVQQDEwxB
# TUUgQ1MgQ0EgMDEwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDVV4EC
# 1vn60PcbgLndN80k3GZh/OGJcq0pDNIbG5q/rrRtNLVUR4MONKcWGyaeVvoaQ8J5
# iYInBaBkaz7ehYnzJp3f/9Wg/31tcbxrPNMmZPY8UzXIrFRdQmCLsj3LcLiWX8BN
# 8HBsYZFcP7Y92R2VWnEpbN40Q9XBsK3FaNSEevoRzL1Ho7beP7b9FJlKB/Nhy0PM
# NaE1/Q+8Y9+WbfU9KTj6jNxrffv87O7T6doMqDmL/MUeF9IlmSrl088boLzAOt2L
# AeHobkgasx3ZBeea8R+O2k+oT4bwx5ZuzNpbGXESNAlALo8HCf7xC3hWqVzRqbdn
# d8HDyTNG6c6zwyf/AgMBAAGjggTaMIIE1jAQBgkrBgEEAYI3FQEEAwIBATAjBgkr
# BgEEAYI3FQIEFgQUkfwzzkKe9pPm4n1U1wgYu7jXcWUwHQYDVR0OBBYEFBtmohn8
# m+ul2oSPGJjpEKTDe5K9MIIBBAYDVR0lBIH8MIH5BgcrBgEFAgMFBggrBgEFBQcD
# AQYIKwYBBQUHAwIGCisGAQQBgjcUAgEGCSsGAQQBgjcVBgYKKwYBBAGCNwoDDAYJ
# KwYBBAGCNxUGBggrBgEFBQcDCQYIKwYBBQUIAgIGCisGAQQBgjdAAQEGCysGAQQB
# gjcKAwQBBgorBgEEAYI3CgMEBgkrBgEEAYI3FQUGCisGAQQBgjcUAgIGCisGAQQB
# gjcUAgMGCCsGAQUFBwMDBgorBgEEAYI3WwEBBgorBgEEAYI3WwIBBgorBgEEAYI3
# WwMBBgorBgEEAYI3WwUBBgorBgEEAYI3WwQBBgorBgEEAYI3WwQCMBkGCSsGAQQB
# gjcUAgQMHgoAUwB1AGIAQwBBMAsGA1UdDwQEAwIBhjASBgNVHRMBAf8ECDAGAQH/
# AgEAMB8GA1UdIwQYMBaAFCleUV5krjS566ycDaeMdQHRCQsoMIIBaAYDVR0fBIIB
# XzCCAVswggFXoIIBU6CCAU+GI2h0dHA6Ly9jcmwxLmFtZS5nYmwvY3JsL2FtZXJv
# b3QuY3JshjFodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvY3JsL2Ft
# ZXJvb3QuY3JshiNodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9hbWVyb290LmNybIYj
# aHR0cDovL2NybDMuYW1lLmdibC9jcmwvYW1lcm9vdC5jcmyGgapsZGFwOi8vL0NO
# PWFtZXJvb3QsQ049QU1FUk9PVCxDTj1DRFAsQ049UHVibGljJTIwS2V5JTIwU2Vy
# dmljZXMsQ049U2VydmljZXMsQ049Q29uZmlndXJhdGlvbixEQz1BTUUsREM9R0JM
# P2NlcnRpZmljYXRlUmV2b2NhdGlvbkxpc3Q/YmFzZT9vYmplY3RDbGFzcz1jUkxE
# aXN0cmlidXRpb25Qb2ludDCCAasGCCsGAQUFBwEBBIIBnTCCAZkwNwYIKwYBBQUH
# MAKGK2h0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0FNRVJPT1RfYW1lcm9vdC5jcnQw
# RwYIKwYBBQUHMAKGO2h0dHA6Ly9jcmwubWljcm9zb2Z0LmNvbS9wa2lpbmZyYS9j
# ZXJ0cy9BTUVST09UX2FtZXJvb3QuY3J0MDcGCCsGAQUFBzAChitodHRwOi8vY3Js
# Mi5hbWUuZ2JsL2FpYS9BTUVST09UX2FtZXJvb3QuY3J0MDcGCCsGAQUFBzAChito
# dHRwOi8vY3JsMy5hbWUuZ2JsL2FpYS9BTUVST09UX2FtZXJvb3QuY3J0MIGiBggr
# BgEFBQcwAoaBlWxkYXA6Ly8vQ049YW1lcm9vdCxDTj1BSUEsQ049UHVibGljJTIw
# S2V5JTIwU2VydmljZXMsQ049U2VydmljZXMsQ049Q29uZmlndXJhdGlvbixEQz1B
# TUUsREM9R0JMP2NBQ2VydGlmaWNhdGU/YmFzZT9vYmplY3RDbGFzcz1jZXJ0aWZp
# Y2F0aW9uQXV0aG9yaXR5MA0GCSqGSIb3DQEBCwUAA4ICAQAot0qGmo8fpAFozcIA
# 6pCLygDhZB5ktbdA5c2ZabtQDTXwNARrXJOoRBu4Pk6VHVa78Xbz0OZc1N2xkzgZ
# MoRpl6EiJVoygu8Qm27mHoJPJ9ao9603I4mpHWwaqh3RfCfn8b/NxNhLGfkrc3wp
# 2VwOtkAjJ+rfJoQlgcacD14n9/VGt9smB6j9ECEgJy0443B+mwFdyCJO5OaUP+TQ
# OqiC/MmA+r0Y6QjJf93GTsiQ/Nf+fjzizTMdHggpTnxTcbWg9JCZnk4cC+AdoQBK
# R03kTbQfIm/nM3t275BjTx8j5UhyLqlqAt9cdhpNfdkn8xQz1dT6hTnLiowvNOPU
# kgbQtV+4crzKgHuHaKfJN7tufqHYbw3FnTZopnTFr6f8mehco2xpU8bVKhO4i0yx
# dXmlC0hKGwGqdeoWNjdskyUyEih8xyOK47BEJb6mtn4+hi8TY/4wvuCzcvrkZn0F
# 0oXd9JbdO+ak66M9DbevNKV71YbEUnTZ81toX0Ltsbji4PMyhlTg/669BoHsoTg4
# yoC9hh8XLW2/V2lUg3+qHHQf/2g2I4mm5lnf1mJsu30NduyrmrDIeZ0ldqKzHAHn
# fAmyFSNzWLvrGoU9Q0ZvwRlDdoUqXbD0Hju98GL6dTew3S2mcs+17DgsdargsEPm
# 6I1lUE5iixnoEqFKWTX5j/TLUjGCFTowghU2AgEBMFgwQTETMBEGCgmSJomT8ixk
# ARkWA0dCTDETMBEGCgmSJomT8ixkARkWA0FNRTEVMBMGA1UEAxMMQU1FIENTIENB
# IDAxAhM2AAAAg1p7oy8moLi9AAEAAACDMA0GCWCGSAFlAwQCAQUAoIHOMBkGCSqG
# SIb3DQEJAzEMBgorBgEEAYI3AgEEMBwGCisGAQQBgjcCAQsxDjAMBgorBgEEAYI3
# AgEVMC8GCSqGSIb3DQEJBDEiBCBF9vaiRDATXzdl2R+E87UJTjlMg/cEQ9p/P/10
# jt9llDBiBgorBgEEAYI3AgEMMVQwUqA0gDIATQBpAGMAcgBvAHMAbwBmAHQAIABD
# AG8AcgBwAG8AcgBhAHQAaQBvAG4AIAAoAFIAKaEagBhodHRwOi8vd3d3Lm1pY3Jv
# c29mdC5jb20wDQYJKoZIhvcNAQEBBQAEggEAC1Dx65BuHU/kiQnEJLm6vVAwrRis
# hiQqkqDHS8GFkJD8Y/2gesmG9GA/Kh1e+1ddVgPROyjuTplFPt6qk3AGoX5DPr5F
# lMXSLbTe2XT+uXWlRG8wvXJqIdfjDvPbZb31gfjcQQqIWW78LEpbFGTbVq1a+hO8
# WSUYO8CjPdbeh3LHNTaAjCG3w0MfRJWDXDopJXirczGx9DHjf51YCUG3FHZYWtWo
# qvoZmf9udIj8GrZTp917oSOKh70ZnD16bD66urmexSYm7wBAwhZQSGAy2Q2xayVd
# tpC/t61s2p1vaubatY7OYidm5ANcROFcU63DUYgGucblraqsgRWDODpltqGCEuIw
# ghLeBgorBgEEAYI3AwMBMYISzjCCEsoGCSqGSIb3DQEHAqCCErswghK3AgEDMQ8w
# DQYJYIZIAWUDBAIBBQAwggFRBgsqhkiG9w0BCRABBKCCAUAEggE8MIIBOAIBAQYK
# KwYBBAGEWQoDATAxMA0GCWCGSAFlAwQCAQUABCC93hLLH+Ac1bVZo1bSCr91CWqo
# NDz+vk8r+MAD9mXWoQIGXMnoje+oGBMyMDE5MDUxMDExNDkwMC41MjdaMASAAgH0
# oIHQpIHNMIHKMQswCQYDVQQGEwJVUzETMBEGA1UECBMKV2FzaGluZ3RvbjEQMA4G
# A1UEBxMHUmVkbW9uZDEeMBwGA1UEChMVTWljcm9zb2Z0IENvcnBvcmF0aW9uMSUw
# IwYDVQQLExxNaWNyb3NvZnQgQW1lcmljYSBPcGVyYXRpb25zMSYwJAYDVQQLEx1U
# aGFsZXMgVFNTIEVTTjo4QTgyLUUzNEYtOUREQTElMCMGA1UEAxMcTWljcm9zb2Z0
# IFRpbWUtU3RhbXAgU2VydmljZaCCDjkwggTxMIID2aADAgECAhMzAAAA8Lxfm66z
# TP8lAAAAAADwMA0GCSqGSIb3DQEBCwUAMHwxCzAJBgNVBAYTAlVTMRMwEQYDVQQI
# EwpXYXNoaW5ndG9uMRAwDgYDVQQHEwdSZWRtb25kMR4wHAYDVQQKExVNaWNyb3Nv
# ZnQgQ29ycG9yYXRpb24xJjAkBgNVBAMTHU1pY3Jvc29mdCBUaW1lLVN0YW1wIFBD
# QSAyMDEwMB4XDTE4MTAyNDIxMTQyMloXDTIwMDExMDIxMTQyMlowgcoxCzAJBgNV
# BAYTAlVTMRMwEQYDVQQIEwpXYXNoaW5ndG9uMRAwDgYDVQQHEwdSZWRtb25kMR4w
# HAYDVQQKExVNaWNyb3NvZnQgQ29ycG9yYXRpb24xJTAjBgNVBAsTHE1pY3Jvc29m
# dCBBbWVyaWNhIE9wZXJhdGlvbnMxJjAkBgNVBAsTHVRoYWxlcyBUU1MgRVNOOjhB
# ODItRTM0Ri05RERBMSUwIwYDVQQDExxNaWNyb3NvZnQgVGltZS1TdGFtcCBTZXJ2
# aWNlMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA4DQ1TWrGcmnKmqfc
# wbbCBFphlnZCcZzACPezFBmF1QH6UKwlWzPWFF9MiKJA/inDJGdAKwdAdEW4TiO6
# txBn0x5EX9i59/QPUWZ1U4UcnM39D6g2Jf7qWi0D149Wke9BsI3zFGF+pxACJKwr
# zjdrv0BSoayMJ3dVYlav7XOegNayo9Jhc9E3EpOk/wMw3zsizRy3msQ4QiF/Vj8K
# a+rGT79g9WW2QJEm7YZeb1DWBXbcTcf4WkwqaNhaB/X7+Mycknwp3Fyf7MvpGgV1
# V7S0+Y9oD0GBmHHrH9ARI+V+SCE075TFY9aXlVrPAiOfmET6jXWSxqCBmNu1iDPo
# tDYxkwIDAQABo4IBGzCCARcwHQYDVR0OBBYEFNuienOj9044MYk7km+IA/mWAkzR
# MB8GA1UdIwQYMBaAFNVjOlyKMZDzQ3t8RhvFM2hahW1VMFYGA1UdHwRPME0wS6BJ
# oEeGRWh0dHA6Ly9jcmwubWljcm9zb2Z0LmNvbS9wa2kvY3JsL3Byb2R1Y3RzL01p
# Y1RpbVN0YVBDQV8yMDEwLTA3LTAxLmNybDBaBggrBgEFBQcBAQROMEwwSgYIKwYB
# BQUHMAKGPmh0dHA6Ly93d3cubWljcm9zb2Z0LmNvbS9wa2kvY2VydHMvTWljVGlt
# U3RhUENBXzIwMTAtMDctMDEuY3J0MAwGA1UdEwEB/wQCMAAwEwYDVR0lBAwwCgYI
# KwYBBQUHAwgwDQYJKoZIhvcNAQELBQADggEBAG0y6BoOfd8EIFm5EegJAF+8m7/D
# fxG8SV0V1/fadv+CN57BnBWkymSoQ2fg8s1lhTaDiCYa1sR61ry0l7JdMYpYaZ7W
# +aMob8JF1GJq/eoQ+0PMFE+HfS7uPT1f7LQs9Aa9eIonDp+kwni7vJHoj0GfD2Xg
# N4Pv3iIE/HoK8ob9pvIvqn6MAG7hLRySIR/zGNyb6OrF9hjZ+QlIC6Zip2NXHh6D
# HISQFG/asz9n15J4pZrwYzajzrpFa089Ybt0clzWdXnSC9cRmnggCv1YK5PcEuUl
# 2SA77iR22Pb6gIoMHPA5NF7Bwdcog05nEFJ2sDAyY2bbSwYV02ry4mKdNKwwggZx
# MIIEWaADAgECAgphCYEqAAAAAAACMA0GCSqGSIb3DQEBCwUAMIGIMQswCQYDVQQG
# EwJVUzETMBEGA1UECBMKV2FzaGluZ3RvbjEQMA4GA1UEBxMHUmVkbW9uZDEeMBwG
# A1UEChMVTWljcm9zb2Z0IENvcnBvcmF0aW9uMTIwMAYDVQQDEylNaWNyb3NvZnQg
# Um9vdCBDZXJ0aWZpY2F0ZSBBdXRob3JpdHkgMjAxMDAeFw0xMDA3MDEyMTM2NTVa
# Fw0yNTA3MDEyMTQ2NTVaMHwxCzAJBgNVBAYTAlVTMRMwEQYDVQQIEwpXYXNoaW5n
# dG9uMRAwDgYDVQQHEwdSZWRtb25kMR4wHAYDVQQKExVNaWNyb3NvZnQgQ29ycG9y
# YXRpb24xJjAkBgNVBAMTHU1pY3Jvc29mdCBUaW1lLVN0YW1wIFBDQSAyMDEwMIIB
# IjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAqR0NvHcRijog7PwTl/X6f2mU
# a3RUENWlCgCChfvtfGhLLF/Fw+Vhwna3PmYrW/AVUycEMR9BGxqVHc4JE458YTBZ
# sTBED/FgiIRUQwzXTbg4CLNC3ZOs1nMwVyaCo0UN0Or1R4HNvyRgMlhgRvJYR4Yy
# hB50YWeRX4FUsc+TTJLBxKZd0WETbijGGvmGgLvfYfxGwScdJGcSchohiq9LZIlQ
# YrFd/XcfPfBXday9ikJNQFHRD5wGPmd/9WbAA5ZEfu/QS/1u5ZrKsajyeioKMfDa
# TgaRtogINeh4HLDpmc085y9Euqf03GS9pAHBIAmTeM38vMDJRF1eFpwBBU8iTQID
# AQABo4IB5jCCAeIwEAYJKwYBBAGCNxUBBAMCAQAwHQYDVR0OBBYEFNVjOlyKMZDz
# Q3t8RhvFM2hahW1VMBkGCSsGAQQBgjcUAgQMHgoAUwB1AGIAQwBBMAsGA1UdDwQE
# AwIBhjAPBgNVHRMBAf8EBTADAQH/MB8GA1UdIwQYMBaAFNX2VsuP6KJcYmjRPZSQ
# W9fOmhjEMFYGA1UdHwRPME0wS6BJoEeGRWh0dHA6Ly9jcmwubWljcm9zb2Z0LmNv
# bS9wa2kvY3JsL3Byb2R1Y3RzL01pY1Jvb0NlckF1dF8yMDEwLTA2LTIzLmNybDBa
# BggrBgEFBQcBAQROMEwwSgYIKwYBBQUHMAKGPmh0dHA6Ly93d3cubWljcm9zb2Z0
# LmNvbS9wa2kvY2VydHMvTWljUm9vQ2VyQXV0XzIwMTAtMDYtMjMuY3J0MIGgBgNV
# HSABAf8EgZUwgZIwgY8GCSsGAQQBgjcuAzCBgTA9BggrBgEFBQcCARYxaHR0cDov
# L3d3dy5taWNyb3NvZnQuY29tL1BLSS9kb2NzL0NQUy9kZWZhdWx0Lmh0bTBABggr
# BgEFBQcCAjA0HjIgHQBMAGUAZwBhAGwAXwBQAG8AbABpAGMAeQBfAFMAdABhAHQA
# ZQBtAGUAbgB0AC4gHTANBgkqhkiG9w0BAQsFAAOCAgEAB+aIUQ3ixuCYP4FxAz2d
# o6Ehb7Prpsz1Mb7PBeKp/vpXbRkws8LFZslq3/Xn8Hi9x6ieJeP5vO1rVFcIK1GC
# RBL7uVOMzPRgEop2zEBAQZvcXBf/XPleFzWYJFZLdO9CEMivv3/Gf/I3fVo/HPKZ
# eUqRUgCvOA8X9S95gWXZqbVr5MfO9sp6AG9LMEQkIjzP7QOllo9ZKby2/QThcJ8y
# Sif9Va8v/rbljjO7Yl+a21dA6fHOmWaQjP9qYn/dxUoLkSbiOewZSnFjnXshbcOc
# o6I8+n99lmqQeKZt0uGc+R38ONiU9MalCpaGpL2eGq4EQoO4tYCbIjggtSXlZOz3
# 9L9+Y1klD3ouOVd2onGqBooPiRa6YacRy5rYDkeagMXQzafQ732D8OE7cQnfXXSY
# Ighh2rBQHm+98eEA3+cxB6STOvdlR3jo+KhIq/fecn5ha293qYHLpwmsObvsxsvY
# grRyzR30uIUBHoD7G4kqVDmyW9rIDVWZeodzOwjmmC3qjeAzLhIp9cAvVCch98is
# TtoouLGp25ayp0Kiyc8ZQU3ghvkqmqMRZjDTu3QyS99je/WZii8bxyGvWbWu3EQ8
# l1Bx16HSxVXjad5XwdHeMMD9zOZN+w2/XU/pnR4ZOC+8z1gFLu8NoFA12u8JJxzV
# s341Hgi62jbb01+P3nSISRKhggLLMIICNAIBATCB+KGB0KSBzTCByjELMAkGA1UE
# BhMCVVMxEzARBgNVBAgTCldhc2hpbmd0b24xEDAOBgNVBAcTB1JlZG1vbmQxHjAc
# BgNVBAoTFU1pY3Jvc29mdCBDb3Jwb3JhdGlvbjElMCMGA1UECxMcTWljcm9zb2Z0
# IEFtZXJpY2EgT3BlcmF0aW9uczEmMCQGA1UECxMdVGhhbGVzIFRTUyBFU046OEE4
# Mi1FMzRGLTlEREExJTAjBgNVBAMTHE1pY3Jvc29mdCBUaW1lLVN0YW1wIFNlcnZp
# Y2WiIwoBATAHBgUrDgMCGgMVAA02B4RxC6vBAGMQYh+CoSUGCzO/oIGDMIGApH4w
# fDELMAkGA1UEBhMCVVMxEzARBgNVBAgTCldhc2hpbmd0b24xEDAOBgNVBAcTB1Jl
# ZG1vbmQxHjAcBgNVBAoTFU1pY3Jvc29mdCBDb3Jwb3JhdGlvbjEmMCQGA1UEAxMd
# TWljcm9zb2Z0IFRpbWUtU3RhbXAgUENBIDIwMTAwDQYJKoZIhvcNAQEFBQACBQDg
# f5upMCIYDzIwMTkwNTEwMTQ0MTQ1WhgPMjAxOTA1MTExNDQxNDVaMHQwOgYKKwYB
# BAGEWQoEATEsMCowCgIFAOB/m6kCAQAwBwIBAAICG8IwBwIBAAICEb0wCgIFAOCA
# 7SkCAQAwNgYKKwYBBAGEWQoEAjEoMCYwDAYKKwYBBAGEWQoDAqAKMAgCAQACAweh
# IKEKMAgCAQACAwGGoDANBgkqhkiG9w0BAQUFAAOBgQApFjYkw2Qw89KvkFZxlAd8
# YtDU5MGxCDy6T83GyzBAw2txIoZBdAZjL+MswTVGP9XrCjpZox1ioETdyiybWpWK
# GcGbZ5mNFiL4P7JAkHagRbizE6ndYtUy2jXzi88Kt7UB9zqI4skj7TNqFPuK7YJs
# biSpX+tHZ7h7FRrXd2m9cjGCAw0wggMJAgEBMIGTMHwxCzAJBgNVBAYTAlVTMRMw
# EQYDVQQIEwpXYXNoaW5ndG9uMRAwDgYDVQQHEwdSZWRtb25kMR4wHAYDVQQKExVN
# aWNyb3NvZnQgQ29ycG9yYXRpb24xJjAkBgNVBAMTHU1pY3Jvc29mdCBUaW1lLVN0
# YW1wIFBDQSAyMDEwAhMzAAAA8Lxfm66zTP8lAAAAAADwMA0GCWCGSAFlAwQCAQUA
# oIIBSjAaBgkqhkiG9w0BCQMxDQYLKoZIhvcNAQkQAQQwLwYJKoZIhvcNAQkEMSIE
# IBQI9H/Y0PoPYcUE3p9IoEvu5u2oRE+Pno6ZmArQTZq8MIH6BgsqhkiG9w0BCRAC
# LzGB6jCB5zCB5DCBvQQgDN5Baf0vRG5Iec54PHCldNzNo2GXK31X9MtUGJbGAJAw
# gZgwgYCkfjB8MQswCQYDVQQGEwJVUzETMBEGA1UECBMKV2FzaGluZ3RvbjEQMA4G
# A1UEBxMHUmVkbW9uZDEeMBwGA1UEChMVTWljcm9zb2Z0IENvcnBvcmF0aW9uMSYw
# JAYDVQQDEx1NaWNyb3NvZnQgVGltZS1TdGFtcCBQQ0EgMjAxMAITMwAAAPC8X5uu
# s0z/JQAAAAAA8DAiBCB4usB5mSysfMVdIlGr+zMdr+oA/hO55TkthD92F4tpajAN
# BgkqhkiG9w0BAQsFAASCAQCddV66vrHfPYBCxSrHw3dAS5sjQv+N+uzhPMwNw6Cj
# 0LOnSOZwQOq7HDy8Gyj9sSPl7O1B3dB9EaUsxxyb695OIETS8b4wWr6YpUcRfRCT
# ziPTzoWAMmCegN5RzzosuqDr9fzmL2EFgG3r222Wa5WedSNwWqhq2T1w1yO9iY8W
# NS2W/AKOehimNDSRQUvepRY8rfhWj90lgDrVhBRh1DUB2Kt9qsjWbb9xbrye05+W
# 5D1XF2YO2zatVflGi7tE0FABsgxdUviGZr0W75QhNYW4TWDvdGAsR0IiOveKFS5Y
# +q6qdfcedIEGpe2FThi8jcCVM4rHgr2sqOd1cBOEMm/B
# SIG # End signature block
